<?php

namespace App\Exceptions;
use App\Exceptions\CustomException;

use http\Exception;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Support\Facades\Http;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->renderable(function (InvalidOrderException $e, $request) {
            return response(view('errors.notice', [
                'title' => '찾을 수 없습니다.',
                'description' => '죄송합니다! 요청하신 페이지가 없습니다.'
            ]), 500);
        });
    }

    public function report( Throwable $exception)
    {
         parent::report($exception); // TODO: Change the autogenerated stub
    }

    public function render( $request,Throwable  $exception )
    {

            if ($exception instanceof CustomException) {
                return response(view('errors.notice', [
                    'title' => '찾을 수 없습니다.',
                    'description' => '죄송합니다! 요청하신 페이지가 없습니다.'
                ]), 500);
            }
            return parent::render($request, $exception);
        }



}
